diff --git a/node_modules/adhan/lib/cjs/DateUtils.js b/node_modules/adhan/lib/cjs/DateUtils.js
index e88d880..7a3f67c 100644
--- a/node_modules/adhan/lib/cjs/DateUtils.js
+++ b/node_modules/adhan/lib/cjs/DateUtils.js
@@ -17,13 +17,15 @@ var _Rounding = require("./Rounding");
 function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
 
 function dateByAddingDays(date, days) {
-  var year = date.getFullYear();
-  var month = date.getMonth();
-  var day = date.getDate() + days;
-  var hours = date.getHours();
-  var minutes = date.getMinutes();
-  var seconds = date.getSeconds();
-  return new Date(year, month, day, hours, minutes, seconds);
+  var result = new Date(date.getTime());
+  result.setDate(date.getDate() + days);
+  if (days !== 0) {
+    while (result.toDateString() === date.toDateString()) {
+      // this is for tricky daylight savings
+      result = new Date(result.valueOf() + days / Math.abs(days) * (60 * 60 * 1000));
+    }
+  }
+  return result;
 }
 
 function dateByAddingMinutes(date, minutes) {
diff --git a/node_modules/adhan/lib/esm/DateUtils.js b/node_modules/adhan/lib/esm/DateUtils.js
index 36a7568..3898efe 100644
--- a/node_modules/adhan/lib/esm/DateUtils.js
+++ b/node_modules/adhan/lib/esm/DateUtils.js
@@ -1,13 +1,15 @@
 import Astronomical from './Astronomical';
 import { Rounding } from './Rounding';
 export function dateByAddingDays(date, days) {
-  const year = date.getFullYear();
-  const month = date.getMonth();
-  const day = date.getDate() + days;
-  const hours = date.getHours();
-  const minutes = date.getMinutes();
-  const seconds = date.getSeconds();
-  return new Date(year, month, day, hours, minutes, seconds);
+  let result = new Date(date.getTime());
+  result.setDate(date.getDate() + days);
+  if (days !== 0) {
+    while (result.toDateString() === date.toDateString()) {
+      // this is for tricky daylight savings
+      result = new Date(result.valueOf() + days / Math.abs(days) * (60 * 60 * 1000));
+    }
+  }
+  return result;
 }
 export function dateByAddingMinutes(date, minutes) {
   return dateByAddingSeconds(date, minutes * 60);
